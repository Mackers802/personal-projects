{"ast":null,"code":"var _jsxFileName = \"/Users/mackyandow/V_School/DEV/Assignments/level-6/photo-app/client/src/context/PostProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostProviderContext = /*#__PURE__*/React.createContext();\nexport const PostProvider = props => {\n  _s();\n\n  // ----------- Axios token interceptor ------------------------\n  const postsAxios = axios.create();\n  postsAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  }); //  ----------- State ------------------------------------------\n\n  const initState = {\n    posts: [],\n    userPosts: [],\n    comments: []\n  };\n  const [postsState, setPostsState] = useState(initState); //  ----------- Functions --------------------------------------\n\n  function getAllPosts() {\n    postsAxios.get(\"/api/posts\").then(res => {\n      // console.log(res);\n      setPostsState(prevState => ({ ...prevState,\n        posts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function newPost(newPost) {\n    postsAxios.post(\"/api/posts\", newPost).then(res => {\n      console.log(\"res\", res);\n      setPostsState(prevState => ({ ...prevState,\n        posts: [...prevState.posts, res.data]\n      })); // getUserPosts()\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function getUserPosts(_id) {\n    console.log(\"getUserPosts user ID\", _id);\n    postsAxios.get(`/api/posts/${_id}`).then(res => {\n      // console.log(\"userPosts\", res)\n      setPostsState(prevState => ({ ...prevState,\n        userPosts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function searchByStyle(selected) {\n    postsAxios.get(`/api/posts/search/style?style=${selected.style}`).then(res => {\n      // console.log(res)\n      setPostsState((...prevState) => ({ ...prevState,\n        posts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function searchByCameraBrand(selected) {\n    postsAxios.get(`/api/posts/search/cameraBrand?cameraBrand=${selected.cameraBrand}`).then(res => {\n      // console.log(res)\n      setPostsState((...prevState) => ({ ...prevState,\n        posts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function searchByCameraModel(selected) {\n    postsAxios.get(`/api/posts/search/cameraModel?cameraModel=${selected.cameraModel}`).then(res => {\n      // console.log(res)\n      setPostsState((...prevState) => ({ ...prevState,\n        posts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function searchByLensBrand(selected) {\n    postsAxios.get(`/api/posts/search/lensBrand?lensBrand=${selected.lensBrand}`).then(res => {\n      // console.log(res)\n      setPostsState((...prevState) => ({ ...prevState,\n        posts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function searchByLensModel(selected) {\n    postsAxios.get(`/api/posts/search/lensModel?lensModel=${selected.lensModel}`).then(res => {\n      // console.log(res)\n      setPostsState((...prevState) => ({ ...prevState,\n        posts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function deletePost(_id) {\n    console.log(\"delete Post\", _id);\n    postsAxios.delete(`/api/posts/${_id}`).then(res => setPostsState(prevState => ({ ...prevState,\n      userPosts: prevState.userPosts.filter(post => post._id !== _id)\n    }))).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function editPost(inputs, _id) {\n    console.log(\"edit Post Id\", _id);\n    console.log(\"edit Post Inputs\", inputs);\n    postsAxios.put(`/api/posts/${_id}`, inputs).then(res => setPostsState(prevState => ({ ...prevState,\n      userPosts: prevState.userPosts.filter(post => post._id !== _id)\n    }))).catch(err => console.log(err.response.data.errMsg));\n    console.log(\"editPosts postsState\", postsState);\n  }\n\n  function getCommentsById(postId) {\n    // console.log(\"provider comment Id\", postId)\n    postsAxios.get(`/api/comments/${postId}`).then(res => {\n      // console.log(res);\n      setPostsState(prev => ({ ...prev,\n        comments: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function addComment(_id, inputs, user) {\n    console.log(\"comment Id\", _id); // const req.user.body = req.params._id\n\n    postsAxios.post(`/api/comments/${_id}`, inputs).then(res => {\n      // console.log(res.data);\n      setPostsState(prevState => ({ ...prevState,\n        comments: [...prevState.comments, res.data]\n      })); // getCommentsById();\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function editComment(inputs, commentId) {\n    postsAxios.put(`/api/comments/${commentId}`, inputs).then(res => // console.log(typeof res)\n    setPostsState(prevState => ({ ...prevState,\n      comments: [prevState.comments.map(comment => !comment._id === commentId, res.data)]\n    }))).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function deleteComment(_id) {\n    console.log(\"delete Comment\", _id);\n    postsAxios.delete(`/api/comments/${_id}`).then(res => setPostsState(prevState => ({ ...prevState,\n      comments: prevState.comments.filter(comment => comment._id !== _id)\n    }))).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  return /*#__PURE__*/_jsxDEV(PostProviderContext.Provider, {\n    value: { ...postsState,\n      getAllPosts,\n      getUserPosts,\n      newPost,\n      deletePost,\n      editPost,\n      searchByStyle,\n      getCommentsById,\n      addComment,\n      deleteComment,\n      editComment,\n      searchByCameraBrand,\n      searchByCameraModel,\n      searchByLensBrand,\n      searchByLensModel\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostProvider, \"GFxJDE2uRzvPmRyvQZEbFoD2MD0=\");\n\n_c = PostProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"sources":["/Users/mackyandow/V_School/DEV/Assignments/level-6/photo-app/client/src/context/PostProvider.js"],"names":["React","useState","axios","PostProviderContext","createContext","PostProvider","props","postsAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","initState","posts","userPosts","comments","postsState","setPostsState","getAllPosts","get","then","res","prevState","data","catch","err","console","log","response","errMsg","newPost","post","getUserPosts","_id","searchByStyle","selected","style","searchByCameraBrand","cameraBrand","searchByCameraModel","cameraModel","searchByLensBrand","lensBrand","searchByLensModel","lensModel","deletePost","delete","filter","editPost","inputs","put","getCommentsById","postId","prev","addComment","user","editComment","commentId","map","comment","deleteComment","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport const PostProviderContext = React.createContext();\n\nexport const PostProvider = (props) => {\n  // ----------- Axios token interceptor ------------------------\n  const postsAxios = axios.create();\n  postsAxios.interceptors.request.use((config) => {\n    const token = localStorage.getItem(\"token\");\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  });\n\n  //  ----------- State ------------------------------------------\n  const initState = {\n    posts: [],\n    userPosts: [],\n    comments: [],\n  };\n  const [postsState, setPostsState] = useState(initState);\n\n  //  ----------- Functions --------------------------------------\n\n  function getAllPosts() {\n    postsAxios\n      .get(\"/api/posts\")\n      .then((res) => {\n        // console.log(res);\n        setPostsState((prevState) => ({\n          ...prevState,\n          posts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function newPost(newPost) {\n    postsAxios\n      .post(\"/api/posts\", newPost)\n      .then((res) => {\n        console.log(\"res\", res);\n        setPostsState((prevState) => ({\n          ...prevState,\n          posts: [...prevState.posts, res.data],\n        }));\n        // getUserPosts()\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function getUserPosts(_id) {\n    console.log(\"getUserPosts user ID\", _id);\n    postsAxios\n      .get(`/api/posts/${_id}`)\n      .then((res) => {\n        // console.log(\"userPosts\", res)\n        setPostsState((prevState) => ({\n          ...prevState,\n          userPosts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function searchByStyle(selected) {\n    postsAxios\n      .get(`/api/posts/search/style?style=${selected.style}`)\n      .then((res) => {\n        // console.log(res)\n        setPostsState((...prevState) => ({\n          ...prevState,\n          posts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function searchByCameraBrand(selected) {\n    postsAxios\n      .get(`/api/posts/search/cameraBrand?cameraBrand=${selected.cameraBrand}`)\n      .then((res) => {\n        // console.log(res)\n        setPostsState((...prevState) => ({\n          ...prevState,\n          posts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function searchByCameraModel(selected) {\n    postsAxios\n      .get(`/api/posts/search/cameraModel?cameraModel=${selected.cameraModel}`)\n      .then((res) => {\n        // console.log(res)\n        setPostsState((...prevState) => ({\n          ...prevState,\n          posts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function searchByLensBrand(selected) {\n    postsAxios\n      .get(`/api/posts/search/lensBrand?lensBrand=${selected.lensBrand}`)\n      .then((res) => {\n        // console.log(res)\n        setPostsState((...prevState) => ({\n          ...prevState,\n          posts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function searchByLensModel(selected) {\n    postsAxios\n      .get(`/api/posts/search/lensModel?lensModel=${selected.lensModel}`)\n      .then((res) => {\n        // console.log(res)\n        setPostsState((...prevState) => ({\n          ...prevState,\n          posts: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function deletePost(_id) {\n    console.log(\"delete Post\", _id);\n    postsAxios\n      .delete(`/api/posts/${_id}`)\n      .then((res) =>\n        setPostsState((prevState) => ({\n          ...prevState,\n          userPosts: prevState.userPosts.filter((post) => post._id !== _id),\n        }))\n      )\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function editPost(inputs, _id) {\n    console.log(\"edit Post Id\", _id);\n    console.log(\"edit Post Inputs\", inputs);\n    postsAxios\n      .put(`/api/posts/${_id}`, inputs)\n      .then((res) =>\n        setPostsState((prevState) => ({\n          ...prevState,\n          userPosts: prevState.userPosts.filter((post) => post._id !== _id),\n        }))\n      )\n      .catch((err) => console.log(err.response.data.errMsg));\n    console.log(\"editPosts postsState\", postsState);\n  }\n\n  function getCommentsById(postId) {\n    // console.log(\"provider comment Id\", postId)\n    postsAxios\n      .get(`/api/comments/${postId}`)\n      .then((res) => {\n        // console.log(res);\n        setPostsState((prev) => ({\n          ...prev,\n          comments: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function addComment(_id, inputs, user) {\n    console.log(\"comment Id\", _id);\n    // const req.user.body = req.params._id\n    postsAxios\n      .post(`/api/comments/${_id}`, inputs)\n      .then((res) => {\n        // console.log(res.data);\n        setPostsState((prevState) => ({\n          ...prevState,\n          comments: [...prevState.comments, res.data],\n        }));\n        // getCommentsById();\n      })\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function editComment(inputs, commentId) {\n    postsAxios\n    .put(`/api/comments/${commentId}`, inputs)\n    .then((res) =>\n    // console.log(typeof res)\n          setPostsState(prevState => ({\n            ...prevState,\n            comments: [prevState.comments.map(comment => !comment._id === commentId, res.data)]\n          }))\n          )\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  function deleteComment(_id) {\n    console.log(\"delete Comment\", _id);\n    postsAxios\n      .delete(`/api/comments/${_id}`)\n      .then((res) =>\n        setPostsState((prevState) => ({\n          ...prevState,\n          comments: prevState.comments.filter((comment) => comment._id !== _id),\n        }))\n      )\n      .catch((err) => console.log(err.response.data.errMsg));\n  }\n\n  return (\n    <PostProviderContext.Provider\n      value={{\n        ...postsState,\n        getAllPosts,\n        getUserPosts,\n        newPost,\n        deletePost,\n        editPost,\n        searchByStyle,\n        getCommentsById,\n        addComment,\n        deleteComment,\n        editComment,\n        searchByCameraBrand,\n        searchByCameraModel,\n        searchByLensBrand,\n        searchByLensModel,\n      }}\n    >\n      {props.children}\n    </PostProviderContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}