{"ast":null,"code":"var _jsxFileName = \"/Users/mackyandow/V_School/DEV/Assignments/level-6/photo-app/client/src/context/UserAuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserAuthContext = /*#__PURE__*/React.createContext();\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport const UserAuthProvider = props => {\n  _s();\n\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    email: \"\",\n    profilePicture: \"\",\n    bio: \"\",\n    errMsg: \"\"\n  }; // const initAllUsers = {\n  //   allUsers: []\n  // }\n\n  const [userState, setUserState] = useState(initState); // const [allUsersState, setAllUsersState] = useState(initAllUsers)\n  // -------------------------------------------- Authorization -----------------------------------------------------\n\n  function signup(credentials) {\n    axios.post(\"/auth/signup\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthError(err.response.data.errMsg));\n  }\n\n  function login(credentials) {\n    axios.post(\"/auth/login\", credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      console.log(res.data);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthError(err.response.data.errMsg));\n  }\n\n  function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUserState({\n      user: {},\n      token: \"\"\n    });\n  } // function getAllUsers(){\n  //   userAxios\n  //     .get(\"/api/users\")\n  //     .then((res) => {\n  //       console.log(res);\n  //       setAllUsersState((prevState) => ({\n  //         ...prevState,\n  //         allUsers: res.data,\n  //       }));\n  //     })\n  //     .catch((err) => console.log(err.response.data.errMsg)); \n  // }\n  // ----------------------------------------- Err Handlers ------------------------------------------------------\n\n\n  function handleAuthError(errMsg) {\n    setUserState(prevState => ({ ...prevState,\n      errMsg\n    }));\n  }\n\n  function authErrorReset() {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: \"\"\n    }));\n  } // ------------------------------------- Profile Change Updates ------------------------------------------------------\n\n\n  function editUserProfile(inputs, _id) {\n    console.log(\"Auth provider _id\", _id);\n    console.log(\"Auth provider inputs\", inputs);\n    userAxios.put(`/api/profile/${_id}`).then(res => {\n      setUserState(prevState => ({ ...prevState,\n        userState: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n    console.log(\"userState\", userState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserAuthContext.Provider, {\n    value: { ...userState,\n      // ...allUsersState,\n      signup,\n      login,\n      logout,\n      authErrorReset,\n      handleAuthError,\n      editUserProfile // getAllUsers\n\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserAuthProvider, \"movQNeVdcQgx3HxMzPHgR+E3Pqk=\");\n\n_c = UserAuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAuthProvider\");","map":{"version":3,"sources":["/Users/mackyandow/V_School/DEV/Assignments/level-6/photo-app/client/src/context/UserAuthProvider.js"],"names":["React","useState","axios","UserAuthContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","UserAuthProvider","props","initState","user","JSON","parse","email","profilePicture","bio","errMsg","userState","setUserState","signup","credentials","post","then","res","data","setItem","stringify","prevUserState","catch","err","handleAuthError","response","login","console","log","logout","removeItem","prevState","authErrorReset","editUserProfile","inputs","_id","put","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\"\n\nexport const UserAuthContext = React.createContext();\n\nconst userAxios = axios.create()\n\nuserAxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\");\n  config.headers.Authorization = `Bearer ${token}`\n  return config\n})\n\nexport const UserAuthProvider = (props) => {\n  const initState = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    token: localStorage.getItem(\"token\") || \"\",\n    email: \"\",\n    profilePicture: \"\",\n    bio: \"\",\n    errMsg: \"\",\n  };\n\n  // const initAllUsers = {\n  //   allUsers: []\n  // }\n  const [userState, setUserState] = useState(initState);\n  // const [allUsersState, setAllUsersState] = useState(initAllUsers)\n\n // -------------------------------------------- Authorization -----------------------------------------------------\n\n  function signup(credentials) {\n    axios.post(\"/auth/signup\", credentials)\n      .then((res) => {\n        const { user, token } = res.data;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        setUserState((prevUserState) => ({\n          ...prevUserState,\n          user,\n          token\n        }));\n      })\n      .catch((err) => handleAuthError(err.response.data.errMsg));\n  }\n\n  function login(credentials) {\n    axios\n      .post(\"/auth/login\", credentials)\n      .then((res) => {\n        const { user, token  } = res.data;\n        console.log(res.data)\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        setUserState((prevUserState) => ({\n          ...prevUserState,\n          user,\n          token\n        }));\n      })\n      .catch((err) => handleAuthError(err.response.data.errMsg));\n  }\n\n  \n  function logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUserState({\n      user: {},\n      token: \"\"\n    });\n  }\n\n  // function getAllUsers(){\n  //   userAxios\n  //     .get(\"/api/users\")\n  //     .then((res) => {\n  //       console.log(res);\n  //       setAllUsersState((prevState) => ({\n  //         ...prevState,\n  //         allUsers: res.data,\n  //       }));\n  //     })\n  //     .catch((err) => console.log(err.response.data.errMsg)); \n  // }\n\n// ----------------------------------------- Err Handlers ------------------------------------------------------\n\n  function handleAuthError(errMsg) {\n    setUserState((prevState) => ({\n      ...prevState,\n      errMsg,\n    }));\n  }\n\n  function authErrorReset() {\n    setUserState((prevState) => ({\n      ...prevState,\n      errMsg: \"\",\n    }));\n  }\n\n  // ------------------------------------- Profile Change Updates ------------------------------------------------------\n\n  function editUserProfile(inputs, _id){\n    console.log(\"Auth provider _id\", _id)\n    console.log(\"Auth provider inputs\", inputs)\n    userAxios\n    .put(`/api/profile/${_id}`)\n      .then((res) => {\n        setUserState((prevState) => ({\n          ...prevState,\n          userState: res.data,\n        }));\n      })\n      .catch((err) => console.log(err.response.data.errMsg)); \n      console.log(\"userState\", userState)\n  }\n\n  return (\n    <UserAuthContext.Provider\n      value={{\n        ...userState,\n        // ...allUsersState,\n        signup,\n        login,\n        logout,\n        authErrorReset,\n        handleAuthError,\n        editUserProfile,\n        // getAllUsers\n      }}\n    >\n      {props.children}\n    </UserAuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}