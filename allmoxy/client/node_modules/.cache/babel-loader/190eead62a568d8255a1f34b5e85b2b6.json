{"ast":null,"code":"var _jsxFileName = \"/Users/mackyandow/V_School/DEV/Assignments/level-6/photo-app/client/src/context/PostProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostProviderContext = /*#__PURE__*/React.createContext();\nexport const PostProvider = props => {\n  _s();\n\n  // ----------- Axios token interceptor ------------------------\n  const postsAxios = axios.create();\n  postsAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  }); //  ----------- State ------------------------------------------\n\n  const initState = {\n    allPosts: [],\n    userPosts: [],\n    commetns: []\n  };\n  const [postsState, setPostsState] = useState(initState); //  ----------- Functions --------------------------------------  \n\n  function getAllPosts() {\n    postsAxios.get(\"/api/posts\").then(res => {\n      console.log(res);\n      setPostsState(prevState => ({ ...prevState,\n        allPosts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function addPost(newPost) {\n    postsAxios.post(\"/api/posts\", newPost).then(res => {\n      setPostsState(prevState => ({ ...prevState,\n        allPosts: [...prevState.allPosts, res.data]\n      }));\n      getUserPosts();\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function getUserPosts(userId) {\n    postsAxios.get(`/api/posts/${user}`).then(res => {\n      setPostsState(prevState => ({ ...prevState,\n        userPosts: res.data\n      }));\n    }).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  return /*#__PURE__*/_jsxDEV(PostProviderContext.Provider, {\n    value: { ...postsState,\n      getAllPosts,\n      getUserPosts,\n      addPost\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 8\n  }, this);\n};\n\n_s(PostProvider, \"yar0SPPUOf1PRV7h/qDI1bGUwUE=\");\n\n_c = PostProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"sources":["/Users/mackyandow/V_School/DEV/Assignments/level-6/photo-app/client/src/context/PostProvider.js"],"names":["React","useState","axios","PostProviderContext","createContext","PostProvider","props","postsAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","initState","allPosts","userPosts","commetns","postsState","setPostsState","getAllPosts","get","then","res","console","log","prevState","data","catch","err","response","errMsg","addPost","newPost","post","getUserPosts","userId","user","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,mBAAmB,gBAAGH,KAAK,CAACI,aAAN,EAA5B;AAEP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAEvC;AACI,QAAMC,UAAU,GAAGL,KAAK,CAACM,MAAN,EAAnB;AACAD,EAAAA,UAAU,CAACE,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAqCC,MAAD,IAAY;AAC5C,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACA,WAAOD,MAAP;AACD,GAJH,EAJmC,CAUvC;;AACI,QAAMM,SAAS,GAAG;AACdC,IAAAA,QAAQ,EAAE,EADI;AAEdC,IAAAA,SAAS,EAAE,EAFG;AAGdC,IAAAA,QAAQ,EAAE;AAHI,GAAlB;AAKA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCtB,QAAQ,CAACiB,SAAD,CAA9C,CAhBmC,CAkBvC;;AAGI,WAASM,WAAT,GAAsB;AAClBjB,IAAAA,UAAU,CACLkB,GADL,CACS,YADT,EAEKC,IAFL,CAEWC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,aAAa,CAAEO,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BX,QAAAA,QAAQ,EAAEQ,GAAG,CAACI;AAFY,OAAhB,CAAD,CAAb;AAIH,KARL,EASKC,KATL,CASYC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,MAA9B,CATpB;AAUC;;AAED,WAASC,OAAT,CAAiBC,OAAjB,EAAyB;AACrB9B,IAAAA,UAAU,CACT+B,IADD,CACM,YADN,EACoBD,OADpB,EAECX,IAFD,CAEOC,GAAD,IAAS;AACXJ,MAAAA,aAAa,CAAEO,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BX,QAAAA,QAAQ,EAAE,CAAE,GAAGW,SAAS,CAACX,QAAf,EAAyBQ,GAAG,CAACI,IAA7B;AAFgB,OAAhB,CAAD,CAAb;AAIJQ,MAAAA,YAAY;AACX,KARD,EASCP,KATD,CASQC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,MAA9B,CAThB;AAUH;;AAEL,WAASI,YAAT,CAAsBC,MAAtB,EAA6B;AACzBjC,IAAAA,UAAU,CACLkB,GADL,CACU,cAAagB,IAAK,EAD5B,EAEKf,IAFL,CAEWC,GAAD,IAAS;AACXJ,MAAAA,aAAa,CAAEO,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1BV,QAAAA,SAAS,EAAEO,GAAG,CAACI;AAFW,OAAhB,CAAD,CAAb;AAIH,KAPL,EAQKC,KARL,CAQYC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,QAAJ,CAAaH,IAAb,CAAkBI,MAA9B,CARpB;AASH;;AAED,sBACG,QAAC,mBAAD,CAAqB,QAArB;AACC,IAAA,KAAK,EAAE,EACH,GAAGb,UADA;AAEHE,MAAAA,WAFG;AAGHe,MAAAA,YAHG;AAIHH,MAAAA;AAJG,KADR;AAAA,cAQO9B,KAAK,CAACoC;AARb;AAAA;AAAA;AAAA;AAAA,UADH;AAYH,CAvEM;;GAAMrC,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from 'react'\nimport axios from \"axios\"\n\nexport const PostProviderContext = React.createContext()\n\nexport const PostProvider = (props) => {\n\n// ----------- Axios token interceptor ------------------------\n    const postsAxios = axios.create();\n    postsAxios.interceptors.request.use((config) => {\n        const token = localStorage.getItem(\"token\");\n        config.headers.Authorization = `Bearer ${token}`;\n        return config;\n      });\n\n//  ----------- State ------------------------------------------\n    const initState = {\n        allPosts: [],\n        userPosts: [],\n        commetns: []\n    }\n    const [ postsState, setPostsState ] = useState(initState)\n\n//  ----------- Functions --------------------------------------  \n\n\n    function getAllPosts(){\n        postsAxios\n            .get(\"/api/posts\")\n            .then((res) => {\n                console.log(res)\n                setPostsState((prevState) => ({\n                    ...prevState,\n                    allPosts: res.data,\n                }))\n            })\n            .catch((err) => console.log(err.response.data.errMsg))\n        }\n\n        function addPost(newPost){\n            postsAxios\n            .post(\"/api/posts\", newPost)\n            .then((res) => {\n                setPostsState((prevState) => ({\n                    ...prevState,\n                    allPosts: [ ...prevState.allPosts, res.data]\n                }))\n            getUserPosts()\n            })\n            .catch((err) => console.log(err.response.data.errMsg))\n        }\n\n    function getUserPosts(userId){\n        postsAxios\n            .get(`/api/posts/${user}`)\n            .then((res) => {\n                setPostsState((prevState) => ({\n                    ...prevState,\n                    userPosts: res.data,\n                }))\n            })\n            .catch((err) => console.log(err.response.data.errMsg))\n    }\n\n    return (\n       <PostProviderContext.Provider\n        value={{\n            ...postsState,\n            getAllPosts,\n            getUserPosts,\n            addPost\n        }}\n       >\n            { props.children }\n       </PostProviderContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}